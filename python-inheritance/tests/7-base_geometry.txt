The 7-base_geometry class test case.

----------------

Import this:

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

----------------

Test cases:

>>> try:
...     bg.area()
... except Exception as err:
...     print(err)
area() is not implemented

>>> try:
...     bg.integer_validator("x", 1)
... except Exception as err:
...     print(err)

>>> try:
...     bg.integer_validator("x", 3.14159)
... except Exception as err:
...     print(err)
x must be an integer

>>> try:
...     bg.integer_validator("x", "52")
... except Exception as err:
...     print(err)
x must be an integer

>>> try:
...     bg.integer_validator("x", (0,))
... except Exception as err:
...     print(err)
x must be an integer

>>> try:
...     bg.integer_validator("x", [7])
... except Exception as err:
...     print(err)
x must be an integer

>>> try:
...     bg.integer_validator("x", True)
... except Exception as err:
...     print(err)
x must be an integer

>>> try:
...     bg.integer_validator("x", {8})
... except Exception as err:
...     print(err)
x must be an integer

>>> try:
...     bg.integer_validator("x", -2)
... except Exception as err:
...     print(err)
x must be greater than 0

>>> try:
...     bg.integer_validator("x", 0)
... except Exception as err:
...     print(err)
x must be greater than 0

>>> try:
...     bg.integer_validator()
... except Exception as err:
...     print(err)
integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> try:
...     bg.integer_validator("x")
... except Exception as err:
...     print(err)
integer_validator() missing 1 required positional argument: 'value'

>>> try:
...     bg.integer_validator(None, None)
... except Exception as err:
...     print(err)
None must be an integer